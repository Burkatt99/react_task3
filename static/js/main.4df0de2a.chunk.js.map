{"version":3,"sources":["components/Timer/index.js","App.js","index.js"],"names":["Timer","props","state","time","timeauto","autostart","this","countdown","setInterval","setState","timer","clearInterval","countdownAuto","step","className","onClick","startTime","pauseTime","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oOAiDeA,G,wDA7Cb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,KAAM,EAAKF,MAAME,KACjBC,SAAU,EAAKH,MAAMG,SACrBC,WAAW,GALI,E,wDAQN,IAAD,OACVC,KAAKC,UAAYC,aAAY,WACH,IAApB,EAAKN,MAAMC,KACb,EAAKM,SAAS,CAAEN,KAAM,EAAKF,MAAME,OAEjC,EAAKM,SAAS,CAAEN,KAAM,EAAKD,MAAMC,KAAO,MAEzC,O,gCAEKO,GACRC,cAAcD,K,0CAEK,IAAD,OAClB,GAAIJ,KAAKJ,MAAMG,UACb,OAAQC,KAAKM,cAAgBJ,aAAY,WACX,IAAxB,EAAKN,MAAME,SACb,EAAKK,SAAS,CAAEL,SAAU,EAAKH,MAAMG,WAErC,EAAKK,SAAS,CAAEL,SAAU,EAAKF,MAAME,SAAW,MAEjD,IAAOE,KAAKL,MAAMY,Q,+BAGf,IAAD,OACP,OACE,yBAAKC,UAAU,OACb,sHAAsBR,KAAKJ,MAAMC,KAAjC,uBACA,4BAAQY,QAAS,kBAAM,EAAKC,cAA5B,SACA,4BAAQD,QAAS,kBAAM,EAAKE,UAAU,EAAKV,aAA3C,SACA,sHAAsBD,KAAKJ,MAAME,SAAjC,uBACA,4BAAQW,QAAS,kBAAM,EAAKE,UAAU,EAAKL,iBAA3C,c,GAvCYM,cCSLC,MARf,WACE,OACE,yBAAKL,UAAU,OACb,kBAAC,EAAD,CAAOX,KAAK,KAAKC,SAAS,KAAKS,KAAK,QCH1CO,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.4df0de2a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./style.css\";\n\nclass Timer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      time: this.props.time,\n      timeauto: this.props.timeauto,\n      autostart: true,\n    };\n  }\n  startTime() {\n    this.countdown = setInterval(() => {\n      if (this.state.time === 0) {\n        this.setState({ time: this.props.time });\n      } else {\n        this.setState({ time: this.state.time - 1 });\n      }\n    }, 1000);\n  }\n  pauseTime(timer) {\n    clearInterval(timer);\n  }\n  componentDidMount() {\n    if (this.state.autostart) {\n      return (this.countdownAuto = setInterval(() => {\n        if (this.state.timeauto === 0) {\n          this.setState({ timeauto: this.props.timeauto });\n        } else {\n          this.setState({ timeauto: this.state.timeauto - 1 });\n        }\n      }, 1000 * this.props.step));\n    }\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Залишилося часу: {this.state.time} сек</h1>\n        <button onClick={() => this.startTime()}>Start</button>\n        <button onClick={() => this.pauseTime(this.countdown)}>Pause</button>\n        <h1>Залишилося часу: {this.state.timeauto} сек</h1>\n        <button onClick={() => this.pauseTime(this.countdownAuto)}>\n          Pause\n        </button>\n      </div>\n    );\n  }\n}\nexport default Timer;\n","import React from \"react\";\nimport \"./App.css\";\nimport Timer from \"./components/Timer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Timer time=\"10\" timeauto=\"20\" step=\"2\" />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}